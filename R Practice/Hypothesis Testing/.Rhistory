#Standard error
(SE <- sqrt((s_m_hr^2/n_m)+(s_f_hr^2/n_f)))
#T_df
(t <- ((x_m_hr-x_f_hr)-0)/SE)
#Degrees of freedom
df = n_m + n_f - 2
#Degrees of freedom
(df = n_m + n_f - 2)
#p-value
(p_value <- pt(t,df,lower.tail = FALSE)*2)
#p-value
(p_value <- pt(t,df,lower.tail = TRUE)*2)
#Standard error
(SE <- sqrt((s_m_hr^2/n_m)+(s_f_hr^2/n_f)))
#T_df
(t <- ((x_m_hr-x_f_hr)-0)/SE)
#Degrees of freedom
(df <- n_m + n_f - 2)
#p-value
(p_value <- pt(t,df,lower.tail = TRUE)*2)
#p-value
(p_value <- pt(t,14,lower.tail = TRUE)*2)
#p-value
(p_value <- pt(t,14,lower.tail = FALSE)*2)
#p-value
(p_value <- pt(t,df,lower.tail = TRUE)*2)
#t*
(t* <- qt(0.025,df))
#t*
(t <- qt(0.025,df))
# Margin of Error(ME)
ME <- t*SE
upper_bound <- (x_m_hr-x_f_hr) + ME
(upper_bound <- (x_m_hr-x_f_hr) + ME)
(lower_bound <- (x_m_hr-x_f_hr) - ME)
#5.Hypothesis Test using t.test() function
t.test(hr$preHR ~ hr$gender, paired = TRUE, alternative = "two.sided")
?t.test
#5.Hypothesis Test using t.test() function
t.test(hr$preHR ~ hr$gender, paired = FALSE, alternative = "two.sided")
# Margin of Error(ME)
(ME <- t*SE)
# 95% confidence interval
(upper_bound <- (x_f_hr-x_m_hr) + ME)
(lower_bound <- (x_f_hr-x_m_hr) - ME)
#t*
(t <- qt(0.025,df,lower.tail = TRUE))
# Margin of Error(ME)
(ME <- t*SE)
# 95% confidence interval
(upper_bound <- (x_f_hr-x_m_hr) + ME)
(lower_bound <- (x_f_hr-x_m_hr) - ME)
#t*
(t <- qt(0.025,df,lower.tail = FALSE))
# Margin of Error(ME)
(ME <- t*SE)
# 95% confidence interval
(upper_bound <- (x_f_hr-x_m_hr) + ME)
(lower_bound <- (x_f_hr-x_m_hr) - ME)
#t*
(t <- qt(0.025,df,lower.tail = FALSE))
# Margin of Error(ME)
(ME <- t*SE)
# 95% confidence interval
(upper_bound <- (x_m_hr-x_f_hr) + ME)
(lower_bound <- (x_m_hr-x_f_hr) - ME)
#5.Hypothesis Test using t.test() function
t.test(hr$preHR ~ hr$gender, paired = FALSE, alternative = "two.sided")
#t*
(t <- qt(0.025,df,lower.tail = TRUE))
# Margin of Error(ME)
(ME <- t*SE)
# 95% confidence interval
(upper_bound <- (x_m_hr-x_f_hr) + ME)
#t*
(t <- qt(0.025,df,lower.tail = TRUE))
# Margin of Error(ME)
(ME <- t*SE)
#Standard error
(SE <- sqrt((s_m_hr^2/n_m)+(s_f_hr^2/n_f)))
# Margin of Error(ME)
(ME <- t*SE)
# 95% confidence interval
(upper_bound <- (x_m_hr-x_f_hr) + abs(ME))
(lower_bound <- (x_m_hr-x_f_hr) - abs(ME))
#t*
(t <- qt(0.025,df,lower.tail = FALSE))
# Margin of Error(ME)
(ME <- t*SE)
# 95% confidence interval
(upper_bound <- (x_m_hr-x_f_hr) + ME)
(lower_bound <- (x_m_hr-x_f_hr) - ME)
#Standard error
(SE <- sqrt((s_m_hr^2/n_m)+(s_f_hr^2/n_f)))
#T_df
(t <- ((x_m_hr-x_f_hr)-0)/SE)
#T_df
(t <- ((x_f_hr-x_m_hr)-0)/SE)
#Degrees of freedom
(df <- n_f + n_f - 2)
#Standard error
(SE <- sqrt((s_m_hr^2/n_m)+(s_f_hr^2/n_f)))
#T_df
(t <- ((x_f_hr-x_m_hr)-0)/SE)
#Degrees of freedom
(df <- n_f + n_f - 2)
#p-value
(p_value <- pt(t,df,lower.tail = TRUE)*2)
#p-value
(p_value <- pt(t,df,lower.tail = FALSE)*2)
#t*
(t <- qt(0.025,df,lower.tail = FALSE))
# Margin of Error(ME)
(ME <- t*SE)
# 95% confidence interval
(upper_bound <- (x_m_hr-x_f_hr) + ME)
(lower_bound <- (x_m_hr-x_f_hr) - ME)
# 95% confidence interval
(upper_bound <- (x_f_hr-x_m_hr) + ME)
(lower_bound <- (x_f_hr-x_m_hr) - ME)
#5.Hypothesis Test using t.test() function
t.test(hr$preHR ~ hr$gender, paired = FALSE, alternative = "two.sided")
hr %>%
filter(age=="elderly") %>%
select(preHR)
hr %>%>
filter(age=="elderly") %>%>
select(preHR)
hr %>%
filter(age=="elderly") %>%
select(preHR)
hr%>%
filter(age=="elderly") %>%
select(preHR)
hr %>%
filter(age=="elderly") %>%
select(preHR)
hr %>%
filter(age == "elderly") %>%
select(preHR)
preHR_el <- select(filter(hr,hr$age=="elderly"),preHR)
library(tidyverse)
preHR_el <- select(filter(hr,hr$age=="elderly"),preHR)
qqplot(preHR_el)
qqnorm(preHR_el, pch = 1, frame = FALSE)
library(car)
?qqnorm
qqnorm(preHR_el)
qqplot(preHR_el)
hist(preHR_el)
preHR_el
preHR_el$preHR
hist(preHR_el$preHR)
qqnorm(preHR_el$preHR)
qqnorm(preHR_el$preHR)
qqline(preHR_el$preHR, col = "blue", lwd = 2)
qqline(preHR_el$preHR, col = "blue", lwd = 1)
qqline(preHR_el$preHR, col = "blue", lwd = 1)
View(preHR_el)
# Checking normality for Middle group
preHR_mi <- select(filter(hr,hr$age=="middle"),preHR)
qqnorm(preHR_mi$preHR)
qqline(preHR_mi$preHR, col = "blue", lwd = 1)
# Checking normality for Young group
preHR_yo <- select(filter(hr,hr$age=="young"),preHR)
qqnorm(preHR_yo$preHR)
qqline(preHR_yo$preHR, col = "blue", lwd = 1)
# Checking for constant variance by plotting box plot all ages.
boxplot(hr$preHR ~ hr$age)
# Dtermine df for groups, error and total.
dfg <- k-1
dfT <- n-1
# Dtermine df for groups, error and total.
dfg <- k-1
# Total groups
k <-3
# Dtermine df for groups, error and total.
dfg <- k-1
dfT <- n-1
# Dtermine df for groups, error and total.
dfg <- k-1
dft <- n-1
dfe <- dft-dfg
summary(group_by(hr$preHR,hr$age))
group_by(hr$preHR,hr$age)
group_by(hr,hr$age)$preHR
group_by(hr,hr$age)
hr %>%
group_by(age) %>%
summarise(mean_prehr = mean(preHR))
hr %>%
group_by(age) %>%
summarise(n_prehr = count(preHR),mean_prehr = mean(preHR),sd_preHr=sd(preHR))
hr %>%
group_by(age) %>%
summarise(mean_prehr = mean(preHR),sd_preHr=sd(preHR))
hr %>%
group_by(age) %>%
summarise(n_prehr = Count(preHR),mean_prehr = mean(preHR),sd_preHr=sd(preHR))
hr %>%
group_by(age) %>%
summarise(n_prehr = n(preHR),mean_prehr = mean(preHR),sd_preHr=sd(preHR))
hr %>%
group_by(age) %>%
summarise(mean_prehr = mean(preHR),sd_preHr=sd(preHR),n_prehr = n(preHR))
hr %>%
group_by(age) %>%
summarise(mean_prehr = mean(preHR),sd_preHr=sd(preHR),n_prehr = n())
hr %>%
group_by(age) %>%
summarise(n_prehr = n(),mean_prehr = mean(preHR),sd_preHr=sd(preHR))
df <- hr %>%
group_by(age) %>%
summarise(n_prehr = n(),mean_prehr = mean(preHR),sd_preHr=sd(preHR))
df
df[age]
#Summary statistics
df <- hr %>%
group_by(age) %>%
summarise(n_prehr = n(),mean_prehr = mean(preHR),sd_preHr=sd(preHR))
#Summary statistics
df_stat <- hr %>%
group_by(age) %>%
summarise(n_prehr = n(),mean_prehr = mean(preHR),sd_preHr=sd(preHR))
df_stat
Total_mean <- sum(df_stat$mean_prehr)
Total_sd <- sum(df_stat$sd_preHr)
Ttoal_sample <- sum(df_stat$n_prehr)
(Total_mean <- sum(df_stat$mean_prehr))
(Total_sd <- sum(df_stat$sd_preHr))
(Ttoal_sample <- sum(df_stat$n_prehr))
(Total_sample <- sum(df_stat$n_prehr))
sum((Total_mean-hr$preHR)^2)
x = 0
for (i in c(1:30)) {
x = x + (Total_mean - hr$preHR[i])^2
}
x
# Determine Sum of squares total
SST <- sum((Total_mean-hr$preHR)^2)
# Determine Sum of squares total
(SST <- sum((Total_mean-hr$preHR)^2))
# Determine Sum of squares between groups
(SSG <- sum(df_stat$n_prehr * (df_stat$mean_prehr - Total_mean)^2))
# Determine sum of squares error
(SSE <- SST - SSG)
# Determine mean square error
(MSE <- SSE/dfe)
# Determine mean square error
(MSE <- SSE/dfe)
# Determine mean square for groups
(MSG <- SSG/dfg)
# F-statistics
f <- MSG/MSE
# F-statistics
(f <- MSG/MSE)
# Determine p-value
pf(f,dfg,dfe,lower.tail = FALSE)
# Determine p-value
pf(f,dfg,dfe,lower.tail = TRUE)
# Total sample size
n<- 30
# Total groups
k <-3
# Determine df for groups, error and total.
(dfg <- k-1)
(dft <- n-1)
(dfe <- dft-dfg)
#Summary statistics
df_stat <- hr %>%
group_by(age) %>%
summarise(n_prehr = n(),mean_prehr = mean(preHR),sd_preHr=sd(preHR))
(Total_mean <- sum(df_stat$mean_prehr))
(Total_sd <- sum(df_stat$sd_preHr))
(Total_sample <- sum(df_stat$n_prehr))
# Determine Sum of squares total
(SST <- sum((Total_mean-hr$preHR)^2))
# Determine Sum of squares between groups
(SSG <- sum(df_stat$n_prehr * (df_stat$mean_prehr - Total_mean)^2))
# Determine sum of squares error
(SSE <- SST - SSG)
# Determine mean square error
(MSE <- SSE/dfe)
# Determine mean square for groups
(MSG <- SSG/dfg)
# F-statistics
(f <- MSG/MSE)
# Determine p-value
pf(f,dfg,dfe,lower.tail = FALSE)
group_by(hr$preHR,hr$age)
group_by(hr,hr$age)
hr %>%
group_by(hr$age)
hr %>%
group_by(age)
# Determine Sum of squares total
(SST <- sum((Total_mean-hr$preHR)^2))
df_stat
# Determine Sum of squares total
(SST <- sum((Total_mean-hr$preHR)^2))
# Determine Sum of squares total
(SST <- sum((hr$preHR-Total_mean)^2))
for (i in c(1:30)) {
hr$preHR[i]
x = x + (hr$preHR[i]-Total_mean)^2
x
}
(for (i in c(1:30)) {
hr$preHR[i]
x = x + (hr$preHR[i]-Total_mean)^2
x
})
x
for (i in c(1:30)) {
print(hr$preHR[i])
x = x + (hr$preHR[i]-Total_mean)^2
print(x)
}
(62.71013-Total_mean)^2
for (i in c(1:30)) {
print(hr$preHR[i])
x = (hr$preHR[i]-Total_mean)^2
print(x)
}
for (i in c(1:30)) {
print(hr$preHR[i])
x = (hr$preHR[i]-Total_mean)^2
SST_tr = SST_tr + x
print(SST_tr)
print(x)
}
SST_tr = 0
for (i in c(1:30)) {
print(hr$preHR[i])
x = (hr$preHR[i]-Total_mean)^2
SST_tr = SST_tr + x
print(SST_tr)
print(x)
}
SST_tr
for (i in c(1:30)) {
x <- (hr$preHR[i]-Total_mean)^2
SST_tr <- SST_tr + x
print(SST_tr)
}
SST_tr = 0
x=0
for (i in c(1:30)) {
x <- (hr$preHR[i]-Total_mean)^2
SST_tr <- SST_tr + x
}
SST_tr
df_stat
(Total_mean <- sum(df_stat$mean_prehr))
x=0
for (i in c(1:30)) {
x <- sum((hr$preHR[i]-Total_mean)^2)
}
x
x/2
# Determine Sum of squares between groups
(SSG <- sum(df_stat$n_prehr * (df_stat$mean_prehr - Total_mean)^2))
for (i in c(1:30)) {
x <- sum(x,(hr$preHR[i]-Total_mean)^2)
}
x=0
for (i in c(1:30)) {
x <- sum(x,(hr$preHR[i]-Total_mean)^2)
}
x
x/2
(Total_mean <- mean(df_stat$mean_prehr))
(mean <- mean(df_stat$mean_prehr))
(Total_sd <- sum(df_stat$sd_preHr))
(Total_sample <- sum(df_stat$n_prehr))
# Determine Sum of squares total
(SST <- sum((hr$preHR-Total_mean)^2))
# Determine Sum of squares between groups
(SSG <- sum(df_stat$n_prehr * (df_stat$mean_prehr - Total_mean)^2))
# Determine sum of squares error
(SSE <- SST - SSG)
# Determine mean square error
(MSE <- SSE/dfe)
# Determine mean square for groups
(MSG <- SSG/dfg)
# F-statistics
(f <- MSG/MSE)
# Determine p-value
pf(f,dfg,dfe,lower.tail = FALSE)
# Determine p-value
(pf(f,dfg,dfe,lower.tail = FALSE))
(b1 <- sy/sy)
#a. slope = B1
#Equation of a regresison line is given by
# y-y0 = b1(x-x0)
x0 <- 112.22
y0 <- 73.60
sx <- 17.96
sy <- 66.06
(b1 <- sy/sy)
(b1 <- sy/sx)
R <- 0.374
(b1 <- (sy/sx)*R)
#9. Using equation y = 1.375x - 80.7, substitute the value of x as 120 mins.
y <- (1.375 * 120) - 80.7
#9. Using equation y = 1.375x - 80.7, substitute the value of x as 120 mins.
(y <- (1.375 * 120) - 80.7)
#10. R-squared = R^2
R_squared <- r^2
#10. R-squared = R^2
(R_squared <- R^2)
#Paired t test
# x(diff) = -3.33   s(diff) = 4.88
x_diff <- -3.33
s_diff <- 4.88
n <- 30
# Checking for conditions
# 1. Each patient is independent of each other.
# 2. By plotting a histogram of the difference between post and pre heart rates
#    we can eliminate the strong skew problem.
hist(hr$postHR-hr$preHR)
#Standard Error
(SE <- s_diff/sqrt(30))
#T-Score
(t <- x_diff - 0/SE)
#Degress of freedom
(df <- n-1)
#p-value
(p_value <- pt(t,df,lower.tail = TRUE)*2)
?t.test
t.test(hr$postHR, hr$preHR, paired = TRUE, alternative = "two.sided")
#******************************************************************************#
# 2-sample t-test
x_f_hr <- 75.2 # Mean female heart rate before drug treatment
s_f_hr <- 12.9 # Standard deviation for female's heart rate
n_f = 15 # Number of females
x_m_hr <- 67.8 # Mean male heart rate before drug treatment
s_m_hr <- 14.3 # Standard deviation for female's heart rate
n_m <- 15 # Number of males
# Checking for conditins
# 1. Observations are independent of each other.
# 2. By plotting box plots for heart rate of males and females before drug treatment
# we can say that, there is no strong skew for males although for females data is
# slightly skewed. Since, sample size is sample size < 30 we assume the skewness to be normal.
boxplot(hr$preHR ~ hr$gender)
#Standard error
(SE <- sqrt((s_f_hr^2/n_m)+(s_m_hr^2/n_f)))
#T_df
(t <- ((x_f_hr-x_m_hr)-0)/SE)
#Degrees of freedom
(df <- n_f + n_m - 2)
#p-value
(p_value <- pt(t,df,lower.tail = FALSE)*2)
#t*
(t <- qt(0.025,df,lower.tail = FALSE))
# Margin of Error(ME)
(ME <- t*SE)
(upper_bound <- (x_f_hr-x_m_hr) + ME)
(lower_bound <- (x_f_hr-x_m_hr) - ME)
#5.Hypothesis Test using t.test() function
t.test(hr$preHR ~ hr$gender, paired = FALSE, alternative = "two.sided")
library(tidyverse)
# Checking normality for Elderly age group
preHR_el <- select(filter(hr,hr$age=="elderly"),preHR)
qqnorm(preHR_el$preHR)
# Checking normality for Elderly age group
preHR_el <- select(filter(hr,hr$age=="elderly"),preHR)
qqnorm(preHR_el$preHR)
qqline(preHR_el$preHR, col = "blue", lwd = 1)
# Checking normality for Middle group
preHR_mi <- select(filter(hr,hr$age=="middle"),preHR)
qqnorm(preHR_mi$preHR)
qqline(preHR_mi$preHR, col = "blue", lwd = 1)
# Checking normality for Young group
preHR_yo <- select(filter(hr,hr$age=="young"),preHR)
qqnorm(preHR_yo$preHR)
qqline(preHR_yo$preHR, col = "blue", lwd = 1)
#3. Checking for constant variance by plotting box plot all ages.
boxplot(hr$preHR ~ hr$age)
# Total sample size
n<- 30
# Total groups
k <-3
# Determine df for groups, error and total.
(dfg <- k-1)
(dft <- n-1)
(dfe <- dft-dfg)
#Summary statistics
df_stat <- hr %>%
group_by(age) %>%
summarise(n_prehr = n(),mean_prehr = mean(preHR),sd_preHr=sd(preHR))
df_stat
(mean <- mean(df_stat$mean_prehr))
(Total_sample <- sum(df_stat$n_prehr))
# Determine Sum of squares total
(SST <- sum((hr$preHR-Total_mean)^2))
# Determine Sum of squares between groups
(SSG <- sum(df_stat$n_prehr * (df_stat$mean_prehr - Total_mean)^2))
# Determine sum of squares error
(SSE <- SST - SSG)
# Determine mean square error
(MSE <- SSE/dfe)
# Determine mean square for groups
(MSG <- SSG/dfg)
# F-statistics
(f <- MSG/MSE)
#a. slope = b1
#Equation of a regresison line is given by
# y-y0 = b1(x-x0)
x0 <- 112.22
# Determine p-value
(pf(f,dfg,dfe,lower.tail = FALSE))
